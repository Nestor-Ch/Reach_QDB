name
)
)
req_variables <- c('q.type','sector','name','label::English','list_name','datasheet')
select(data, any_of(req_variables)) %>%
rename(label_english = `label::English`)%>%
filter(q.type %in% c('select_one', 'select_multiple', 'integer', 'decimal')) %>%
filter(!is.na(label_english))
select(data, any_of(req_variables)) %>%
rename(label_english = `label::English`)%>%
filter(q.type %in% c('select_one', 'select_multiple', 'integer', 'decimal'))
# rename the label column, filter the needed types and get the needed columns
data <- select(data, any_of(req_variables)) %>%
rename(label_english = `label::English`)%>%
filter(q.type %in% c('select_one', 'select_multiple', 'integer', 'decimal')) %>%
filter(!is.na(label_english))
names(data) <- tolower(names(data))
!'sector' %in% names(data)
'sector' %in% names(data) &
any(! (unique((data$sector)) %in% c('WASH','AAP','CCCM','Shelter and NFI','Education',
'Food Security and Livelihoods','Winterization','Health','Displacement',
'Cash and Markets','Government services','Social cohesion',
'Protection','Nutrition','Emergency Telecommunications',
'Logistics','Interview component','Demographics', NA))
)
data %>%
select(sector,name, label_english, list_name, q.type, datasheet) %>%
mutate(sector = gsub('\\&|\\&amp;','and',sector)) %>%
distinct()
data <- data %>%
select(sector,name, label_english, list_name, q.type, datasheet) %>%
mutate(sector = gsub('\\&|\\&amp;','and',sector)) %>%
distinct()
'sector' %in% names(data)
runApp('shiny_13_final_updates.R')
runApp('shiny_13_final_updates.R')
runApp('shiny_13_final_updates.R')
data<-test2
View(test2)
View(test2)
View(testo_2)
# testo_2<<-data
#filter out rows with columns we don't need
data <- testo_2 %>%
filter(
!grepl(
'enum|partner|rectangle|geo_location|geopoint|street_type_calc|
name_uid_list|site_name_text|site_name|consent',
name
)
)
# rename the label column, filter the needed types and get the needed columns
data <- select(data, any_of(req_variables)) %>%
rename(label_english = `label::English`)%>%
filter(q.type %in% c('select_one', 'select_multiple', 'integer', 'decimal')) %>%
filter(!is.na(label_english))
View(data)
View(testo_2)
req_variables
'Sector' %in% names(data)
runApp('shiny_13_final_updates.R')
rsconnect::showLogs()
rsconnect::showLogs()
library(utilityR)
knitr::opts_chunk$set(echo = TRUE)
token <- "e5895090cb45140ad364f68b8592d32a38bf007a" # check your token at https://kobo.impact-initiatives.org/token/?format=json
# connect to the server here
kobo_setup(url = "https://kobo.impact-initiatives.org/",
token = token)
library(robotoolbox)
# use API key?
use_API <- T
token <- "e5895090cb45140ad364f68b8592d32a38bf007a" # check your token at https://kobo.impact-initiatives.org/token/?format=json
# If loading the data through API fill the following
source("src/init.R")
# connect to the server here
kobo_setup(url = "https://kobo.impact-initiatives.org/",
token = token)
kobo_asset_list()  # you can check all your available assets with kobo_asset_list() and select the correct uid out of that
kobo_asset_list()
kobo_asset_list() %>% View()
assest_uid <- 'aJCepSrTBEaVgSmawjVWM3'
kobo_form(assest_uid )
ls <- kobo_form(assest_uid)
View(ls)
View(ls[[26]][[14]])
View(ls[[26]][[77]])
View(ls[[26]][[212]])
tool <- kobo_form(assest_uid)
View(tool)
tool %>%
select(name,list_name,type,label,lang,
calculation,required,relevant,appearance,choice_filter, constraint,constraint_message, hint, choices)
tool <- tool %>%
select(name,list_name,type,label,lang,
calculation,required,relevant,appearance,choice_filter, constraint,constraint_message, hint, choices, kuid)
tool %>%
select(kuid,label,lang,constraint_message)
directory_dictionary$label_colname
directory_dictionary <- list(
research_cycle_name = 'xxxx',
round = 'xxxx',
dir.audits = "data/inputs/audits/reach/", # The directory to your audit files
dir.audits.check = "output/checking/audit/",# The directory to your audit summary files (you'll be checking these)
dir.requests = "output/checking/requests/", # the directory of your other_requests file
dir.responses = "output/checking/responses/", # the directory of your responses to open questions
enum_colname = "XXX", # the column that contains the enumerator ID,
enum_comments = 'XXX', # the column that contains the enumerator's comments,
filename.tool = "resources/XXX.xlsx", # the name of your Kobo tool and its path
data_name = "XXXX.xlsx", # the name of your dataframe
data_path = "data/inputs/kobo_export/", # the path to your dataframe
label_colname = 'label::English', # the name of your label column. Has to be identical in Kobo survey and choices sheets
dctime_short = "XXXX" # the data of your survey (just for naming)
)
label_colname = 'label::English', # the name of your label column. Has to be identical in Kobo survey and choices sheets
directory_dictionary$label_colname
gsub(".*\\::","",directory_dictionary$label_colname)
gsub("\\::.*","",directory_dictionary$label_colname)
tool %>%
select(kuid,label,lang,constraint_message) %>%
mutate(names_col = paste0(gsub("\\::.*","",directory_dictionary$label_colname),'::', lang))
tool %>%
select(kuid,label,lang,constraint_message) %>%
mutate(names_col = paste0(gsub("\\::.*","",directory_dictionary$label_colname),'::', lang)) %>%
pivot_wider(id_cols = kuid, names_from = names_col, values_from = label)
# create the labels
tool_labels <- tool %>%
select(kuid,label,lang,constraint_message) %>%
mutate(names_col = paste0(gsub("\\::.*","",directory_dictionary$label_colname),'::', lang)) %>%
pivot_wider(id_cols = kuid, names_from = names_col, values_from = label)
View(tool_labels)
tool %>%
select(kuid,label,lang,constraint_message,hint) %>%
pivot_longer(c(label,constraint_message,hint), names_to = 'column',values_to = 'text')
tool %>%
select(kuid,label,lang,constraint_message,hint) %>%
pivot_longer(c(label,constraint_message,hint), names_to = 'column',values_to = 'text') %>%
mutate(names_col = paste0(gsub("\\::.*","",directory_dictionary$label_colname),'::', lang)) %>%
pivot_wider(id_cols = kuid, names_from = names_col, values_from = text )
tool %>%
select(kuid,label,lang,constraint_message,hint) %>%
mutate(names_col = paste0(gsub("\\::.*","",directory_dictionary$label_colname),'::', lang)) %>%
pivot_wider(id_cols = kuid, names_from = names_col, values_from = label)
tool %>%
select(kuid,label,lang,constraint_message,hint) %>%
pivot_longer(c(label,constraint_message,hint), names_to = 'column',values_to = 'text') %>%
mutate(names_col = paste0(gsub("\\::.*","",directory_dictionary$label_colname),'::', lang)) %>%
pivot_wider(id_cols = kuid, names_from = names_col, values_from = text)
tool %>%
select(kuid,label,lang,constraint_message,hint) %>%
pivot_longer(c(label,constraint_message,hint), names_to = 'column',values_to = 'text') %>%
mutate(names_col = paste0(gsub("\\::.*","",directory_dictionary$label_colname),'::', lang))
tool %>%
select(kuid,label,lang,constraint_message,hint) %>%
pivot_longer(c(label,constraint_message,hint), names_to = 'column',values_to = 'text') %>%
mutate(names_col = ifelse(column =='label',
paste0(gsub("\\::.*","",directory_dictionary$label_colname),'::', lang),
paste(column,'::',lang)))
tool %>%
select(kuid,label,lang,constraint_message,hint) %>%
pivot_longer(c(label,constraint_message,hint), names_to = 'column',values_to = 'text') %>%
mutate(names_col = ifelse(column =='label',
paste0(gsub("\\::.*","",directory_dictionary$label_colname),'::', lang),
paste0(column,'::',lang)))
tool %>%
select(kuid,label,lang,constraint_message,hint) %>%
pivot_longer(c(label,constraint_message,hint), names_to = 'column',values_to = 'text') %>%
mutate(names_col = ifelse(column =='label',
paste0(gsub("\\::.*","",directory_dictionary$label_colname),'::', lang),
paste0(column,'::',lang))) %>%
pivot_wider(id_cols = kuid, names_from = names_col, values_from = text)
tool_labels <- tool %>%
select(kuid,label,lang,constraint_message,hint) %>%
pivot_longer(c(label,constraint_message,hint), names_to = 'column',values_to = 'text') %>%
mutate(names_col = ifelse(column =='label',
paste0(gsub("\\::.*","",directory_dictionary$label_colname),'::', lang),
paste0(column,'::',lang))) %>%
pivot_wider(id_cols = kuid, names_from = names_col, values_from = text)
View(tool_labels)
tool %>%
select(-c(label,lang,constraint_message,hint)) %>%
distinct()
# remove unnecessary rows from the tool
tool_cl <- tool %>%
select(-c(label,lang,constraint_message,hint)) %>%
distinct()
tool_cl %>%
left_join(
tool %>%
select(kuid,label,lang,constraint_message,hint) %>%
pivot_longer(c(label,constraint_message,hint), names_to = 'column',values_to = 'text') %>%
mutate(names_col = ifelse(column =='label',
paste0(gsub("\\::.*","",directory_dictionary$label_colname),'::', lang),
paste0(column,'::',lang))) %>%
pivot_wider(id_cols = kuid, names_from = names_col, values_from = text)
)
# create the labels
tool_cl <- tool_cl %>%
left_join(
tool %>%
select(kuid,label,lang,constraint_message,hint) %>%
pivot_longer(c(label,constraint_message,hint), names_to = 'column',values_to = 'text') %>%
mutate(names_col = ifelse(column =='label',
paste0(gsub("\\::.*","",directory_dictionary$label_colname),'::', lang),
paste0(column,'::',lang))) %>%
pivot_wider(id_cols = kuid, names_from = names_col, values_from = text)
)
View(tool)
View(tool_cl)
View(tool_cl[[10]][[1]])
View(tool_cl[[10]][[2]])
tool_cl %>%
select(kuid, choices)
tool_cl %>%
select(kuid, choices) %>%
nrow(choices)
tool_cl %>%
select(kuid, choices) %>%
mutate(filt = nrow(choices))
tool_cl %>%
select(kuid, choices) %>%
rowwise() %>%
mutate(filt = nrow(choices))
tool_cl %>%
select(kuid, choices) %>%
rowwise() %>%
mutate(filt = nrow(choices)) %>%
ungroup() %>%
filter(filt>0)
tool_cl %>%
select(kuid, choices) %>%
rowwise() %>%
mutate(filt = nrow(choices)) %>%
ungroup() %>%
filter(filt>0) %>% View()
View(.[[2]][[1]])
View(.[[2]][[2]])
View(.[[2]][[3]])
tool_ch <- tool_cl %>%
select(kuid, choices) %>%
rowwise() %>%
mutate(filt = nrow(choices)) %>%
ungroup() %>%
filter(filt>0)
View(tool_ch)
View(tool_ch[[2]][[3]])
tool_cl %>%
select(kuid, choices) %>%
rowwise() %>%
filter(nrow(choices)>0) %>%
ungroup()
tool_cl %>%
select(kuid, choices) %>%
rowwise() %>%
filter(nrow(choices)>0) %>%
ungroup() %>%
unnest(choices)
tool_cl %>%
select(kuid, choices) %>%
rowwise() %>%
filter(nrow(choices)>0) %>%
ungroup() %>%
unnest(choices) %>%
select(-value_version)
tool_cl %>%
select(kuid, choices) %>%
rowwise() %>%
filter(nrow(choices)>0) %>%
ungroup() %>%
unnest(choices) %>%
select(-value_version) %>%
mutate(names_col = paste0(gsub("\\::.*","",directory_dictionary$label_colname),'::', value_lang))
tool_cl %>%
select(kuid, choices) %>%
rowwise() %>%
filter(nrow(choices)>0) %>%
ungroup() %>%
unnest(choices) %>%
select(-value_version) %>%
mutate(names_col = paste0(gsub("\\::.*","",directory_dictionary$label_colname),'::', value_lang)) %>%
pivot_wider(id_cols = c(kuid,value_name), names_from = names_col, values_from = value_label)
tool_cl %>%
select(kuid, choices) %>%
rowwise() %>%
filter(nrow(choices)>0) %>%
ungroup() %>%
unnest(choices) %>%
select(-value_version) %>%
mutate(names_col = paste0(gsub("\\::.*","",directory_dictionary$label_colname),'::', value_lang))
tool_ch <- tool_cl %>%
select(kuid, choices) %>%
rowwise() %>%
filter(nrow(choices)>0) %>%
ungroup() %>%
unnest(choices) %>%
select(-value_version) %>%
mutate(names_col = paste0(gsub("\\::.*","",directory_dictionary$label_colname),'::', value_lang)) %>%
pivot_wider(id_cols = c(kuid,value_name), names_from = names_col, values_from = value_label)
View(tool_ch)
tool_ch <- tool_cl %>%
select(kuid, choices) %>%
rowwise() %>%
filter(nrow(choices)>0) %>%
ungroup() %>%
unnest(choices) %>%
select(-value_version) %>%
mutate(names_col = paste0(gsub("\\::.*","",directory_dictionary$label_colname),'::', value_lang))
View(tool_ch)
tool_cl %>%
select(kuid, choices) %>%
rowwise() %>%
filter(nrow(choices)>0) %>%
ungroup() %>%
unnest(choices) %>%
select(-value_version) %>%
mutate(names_col = paste0(gsub("\\::.*","",directory_dictionary$label_colname),'::', value_lang)) %>%
distinct()
tool_cl %>%
select(kuid, choices) %>%
rowwise() %>%
filter(nrow(choices)>0) %>%
ungroup() %>%
unnest(choices) %>%
select(-value_version) %>%
mutate(names_col = paste0(gsub("\\::.*","",directory_dictionary$label_colname),'::', value_lang))
tool_cl %>%
select(kuid, choices) %>%
rowwise() %>%
filter(nrow(choices)>0) %>%
ungroup() %>%
unnest(choices) %>%
select(-value_version) %>%
mutate(names_col = paste0(gsub("\\::.*","",directory_dictionary$label_colname),'::', value_lang)) %>%
distinct() %>%
pivot_wider(id_cols = c(kuid,value_name), names_from = names_col, values_from = value_label)
tool_ch <- tool_cl %>%
select(kuid, choices) %>%
rowwise() %>%
filter(nrow(choices)>0) %>%
ungroup() %>%
unnest(choices) %>%
select(-value_version) %>%
mutate(names_col = paste0(gsub("\\::.*","",directory_dictionary$label_colname),'::', value_lang)) %>%
distinct() %>%
pivot_wider(id_cols = c(kuid,value_name), names_from = names_col, values_from = value_label)
tool_cl %>%
select(kuid, choices, list_name) %>%
rowwise() %>%
filter(nrow(choices)>0) %>%
ungroup() %>%
unnest(choices) %>%
select(-value_version) %>%
mutate(names_col = paste0(gsub("\\::.*","",directory_dictionary$label_colname),'::', value_lang)) %>%
distinct() %>%
pivot_wider(id_cols = c(kuid,value_name), names_from = names_col, values_from = value_label) %>%
rename(name = value_name)
tool_cl %>%
select(kuid, choices, list_name) %>%
rowwise() %>%
filter(nrow(choices)>0) %>%
ungroup() %>%
unnest(choices) %>%
select(-value_version) %>%
mutate(names_col = paste0(gsub("\\::.*","",directory_dictionary$label_colname),'::', value_lang)) %>%
distinct() %>%
pivot_wider(id_cols = c(kuid,value_name,list_name), names_from = names_col, values_from = value_label) %>%
rename(name = value_name)
tool_cl %>%
select(list_name,kuid, choices) %>%
rowwise() %>%
filter(nrow(choices)>0) %>%
ungroup() %>%
unnest(choices) %>%
select(-value_version) %>%
mutate(names_col = paste0(gsub("\\::.*","",directory_dictionary$label_colname),'::', value_lang)) %>%
distinct() %>%
pivot_wider(id_cols = c(kuid,value_name,list_name), names_from = names_col, values_from = value_label) %>%
rename(name = value_name)
tool_cl %>%
select(list_name,kuid, choices) %>%
rowwise() %>%
filter(nrow(choices)>0) %>%
ungroup() %>%
unnest(choices) %>%
select(-value_version) %>%
mutate(names_col = paste0(gsub("\\::.*","",directory_dictionary$label_colname),'::', value_lang)) %>%
distinct() %>%
pivot_wider(id_cols = c(kuid,list_name,value_name), names_from = names_col, values_from = value_label) %>%
rename(name = value_name)
tool.choices <- tool_cl %>%
select(list_name,kuid, choices) %>%
rowwise() %>%
filter(nrow(choices)>0) %>%
ungroup() %>%
unnest(choices) %>%
select(-value_version) %>%
mutate(names_col = paste0(gsub("\\::.*","",directory_dictionary$label_colname),'::', value_lang)) %>%
distinct() %>%
pivot_wider(id_cols = c(kuid,list_name,value_name), names_from = names_col, values_from = value_label) %>%
rename(name = value_name)
tool_cl %>%
mutate(q.type = type,
type = paste(list_name, name))
tool_cl %>%
mutate(q.type = type,
type = paste(list_name, name)) %>%
select(type,name,starts_with('label'), calculation,required,relevant, starts_with('constraint'),
starts_with('hint'))
tool_cl %>%
mutate(q.type = type,
type = paste(list_name, name)) %>%
select(type,name,starts_with('label'), calculation,required,relevant, appearance, choice_filter,
starts_with('constraint'),
starts_with('hint'))
tool_cl %>%
mutate(q.type = type,
type = paste(list_name, name)) %>%
select(type,name,starts_with('label'), calculation,required,relevant, appearance, choice_filter,
starts_with('constraint'),
starts_with('hint'), kuid)
tool.survey <- tool_cl %>%
mutate(q.type = type,
type = paste(list_name, name)) %>%
select(type,name,starts_with('label'), calculation,required,relevant, appearance, choice_filter,
starts_with('constraint'),
starts_with('hint'), kuid)
setdiff(names(tool_cl), names(tool.survey))
tool.survey <- tool_cl %>%
mutate(q.type = type,
type = paste(list_name, name)) %>%
select(type,name,starts_with('label'), calculation,required,relevant, appearance, choice_filter,
starts_with('constraint'),
starts_with('hint'),list_name, kuid)
directory_dictionary$filename.tool
# check if file exists first (maybe somebody forgot that they've already uploaded it)
exists(directory_dictionary$filename.tool)
# check if file exists first (maybe somebody forgot that they've already uploaded it)
file.exists(directory_dictionary$filename.tool)
directory_dictionary$filename.tool
getwd()
df <- kobo_submissions(asset)
df <- kobo_submissions(assest_uid)
View(df)
paste0(directory_dictionary$data_path,'/',directory_dictionary$data_name)
paste0(directory_dictionary$data_path,directory_dictionary$data_name)
write.xlsx(df,'C:/Users/reach/Desktop/test1.xlsx')
View(df)
!file.exists(paste0(directory_dictionary$data_path,directory_dictionary$data_name))
df[["main"]]
View(df[["main"]])
class(df[[1]])
class(df[[2]])
df <- as.list(df)
write.xlsx(df,paste0(directory_dictionary$data_path,directory_dictionary$data_name))
write.xlsx(df,'C:/Users/reach/Desktop/test1.xlsx')
library(shiny); runApp('shiny_13_final_updates.R')
runApp('shiny_13_final_updates.R')
runApp('shiny_13_final_updates.R')
library(shiny); runApp('shiny_13_final_updates.R')
data <- utilityR::load.tool.survey('C:/Users/reach/Desktop/Git/CINM/resources/MSNA_2024_Kobo_tool_F2F.xlsx',label_colname = 'label::English')
# testo_2<<-data
#filter out rows with columns we don't need
data <- data %>%
mutate(name = gsub('\\.','-',name)) %>%
filter(
!grepl(
'enum|partner|rectangle|geo_location|geopoint|street_type_calc|
name_uid_list|site_name_text|site_name|consent',
name
)
)
'Sector' %in% names(data)
names(data)
# rename the label column, filter the needed types and get the needed columns
data <- select(data, any_of(req_variables)) %>%
rename(label_english = `label::English`)%>%
filter(q.type %in% c('select_one', 'select_multiple', 'integer', 'decimal')) %>%
filter(!is.na(label_english))
req_variables <- c('q.type','sector','name','label::English','list_name','datasheet')
# rename the label column, filter the needed types and get the needed columns
data <- select(data, any_of(req_variables)) %>%
rename(label_english = `label::English`)%>%
filter(q.type %in% c('select_one', 'select_multiple', 'integer', 'decimal')) %>%
filter(!is.na(label_english))
data
names(data) <- tolower(names(data))
!'sector' %in% names(data)
'sector' %in% names(data) &
any(! (unique((data$sector)) %in% c('WASH','AAP','CCCM','Shelter and NFI','Education',
'Food Security and Livelihoods','Winterization','Health','Displacement',
'Cash and Markets','Government services','Social cohesion',
'Protection','Nutrition','Emergency Telecommunications',
'Logistics','Interview component','Demographics', NA))
)
'sector' %in% names(data) &
any(! (unique((data$sector)) %in% c('WASH','AAP','CCCM','Shelter and NFI','Education',
'Food Security and Livelihoods','Winterization','Health','Displacement',
'Cash and Markets','Government services','Social cohesion',
'Protection','Nutrition','Emergency Telecommunications',
'Logistics','Interview component','Demographics'))
)
# get the list of the wrong sectors
wrong_sectors <- setdiff(
unique(data$sector), c('WASH','AAP','CCCM','Shelter and NFI','Education',
'Food Security and Livelihoods','Winterization','Health','Displacement',
'Cash and Markets','Government services','Social cohesion',
'Protection','Nutrition','Emergency Telecommunications',
'Logistics','Interview component','Demographics', NA)
)
wrong_sectors
(all(is.na(data$sector)))
runApp('shiny_13_final_updates.R')
